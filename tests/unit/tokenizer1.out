tokenizer:
tokenizing line: label1 lda #$10
TOK -> type=n, len=6, ptr=label1 lda #$10
TOK -> type=n, len=3, ptr=lda #$10
TOK -> type=t, len=1, ptr=#$10
TOK -> type=l, len=3, ptr=$10 ltype=h, val=16
END -> type=x, rest->
tokenizing line: label2: lda <xyz ; comment
TOK -> type=n, len=6, ptr=label2: lda <xyz ; comment
TOK -> type=t, len=1, ptr=: lda <xyz ; comment
TOK -> type=n, len=3, ptr=lda <xyz ; comment
TOK -> type=t, len=1, ptr=<xyz ; comment
TOK -> type=n, len=3, ptr=xyz ; comment
TOK -> type=t, len=1, ptr=; comment
TOK -> type=n, len=7, ptr=comment
END -> type=x, rest->
tokenizing line: dec 125
TOK -> type=n, len=3, ptr=dec 125
TOK -> type=l, len=3, ptr=125 ltype=d, val=125
END -> type=x, rest->
tokenizing line: dec 125,
TOK -> type=n, len=3, ptr=dec 125,
TOK -> type=l, len=3, ptr=125, ltype=d, val=125
TOK -> type=t, len=1, ptr=,
END -> type=x, rest->
tokenizing line: dec 125;
TOK -> type=n, len=3, ptr=dec 125;
TOK -> type=l, len=3, ptr=125; ltype=d, val=125
TOK -> type=t, len=1, ptr=;
END -> type=x, rest->
tokenizing line: dec 0128
TOK -> type=n, len=3, ptr=dec 0128
ERR:foo:1 Illegal digit - got '8', expected base 8
ERR:dec 0128
ERR:    ^
END -> type=e, rest->0128
tokenizing line: dec 0127,
TOK -> type=n, len=3, ptr=dec 0127,
TOK -> type=l, len=4, ptr=0127, ltype=O, val=87
TOK -> type=t, len=1, ptr=,
END -> type=x, rest->
tokenizing line: dec 0126;
TOK -> type=n, len=3, ptr=dec 0126;
TOK -> type=l, len=4, ptr=0126; ltype=O, val=86
TOK -> type=t, len=1, ptr=;
END -> type=x, rest->
tokenizing line: inc 0x12df
TOK -> type=n, len=3, ptr=inc 0x12df
TOK -> type=l, len=6, ptr=0x12df ltype=H, val=4831
END -> type=x, rest->
tokenizing line: inc $1234f
TOK -> type=n, len=3, ptr=inc $1234f
TOK -> type=l, len=6, ptr=$1234f ltype=h, val=74575
END -> type=x, rest->
tokenizing line: inc 0x1234f,
TOK -> type=n, len=3, ptr=inc 0x1234f,
TOK -> type=l, len=7, ptr=0x1234f, ltype=H, val=74575
TOK -> type=t, len=1, ptr=,
END -> type=x, rest->
tokenizing line: inc $1234f,
TOK -> type=n, len=3, ptr=inc $1234f,
TOK -> type=l, len=6, ptr=$1234f, ltype=h, val=74575
TOK -> type=t, len=1, ptr=,
END -> type=x, rest->
tokenizing line: inc $1234f;
TOK -> type=n, len=3, ptr=inc $1234f;
TOK -> type=l, len=6, ptr=$1234f; ltype=h, val=74575
TOK -> type=t, len=1, ptr=;
END -> type=x, rest->
tokenizing line: inc $12g4f;
TOK -> type=n, len=3, ptr=inc $12g4f;
ERR:foo:1 Illegal digit - got 'g', expected base 16
ERR:inc $12g4f;
ERR:    ^
END -> type=e, rest->$12g4f;
tokenizing line: inc 0x12g4f;
TOK -> type=n, len=3, ptr=inc 0x12g4f;
ERR:foo:1 Illegal digit - got 'g', expected base 16
ERR:inc 0x12g4f;
ERR:    ^
END -> type=e, rest->0x12g4f;
tokenizing line: .byt 'xsd&'
TOK -> type=t, len=1, ptr=.byt 'xsd&'
TOK -> type=n, len=3, ptr=byt 'xsd&'
TOK -> type=s, len=6, ptr='xsd&'
END -> type=x, rest->
tokenizing line: .byt 'xsd&
TOK -> type=t, len=1, ptr=.byt 'xsd&
TOK -> type=n, len=3, ptr=byt 'xsd&
TOK -> type=s, len=5, ptr='xsd&
END -> type=x, rest->
tokenizing line: .asc "dsdd'
TOK -> type=t, len=1, ptr=.asc "dsdd'
TOK -> type=n, len=3, ptr=asc "dsdd'
TOK -> type=s, len=6, ptr="dsdd'
END -> type=x, rest->
tokenizing line: .asc "dsA€"
TOK -> type=t, len=1, ptr=.asc "dsA€"
TOK -> type=n, len=3, ptr=asc "dsA€"
TOK -> type=s, len=8, ptr="dsA€"
END -> type=x, rest->
